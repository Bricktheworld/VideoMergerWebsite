{"version":3,"sources":["dropzone/DropZone.tsx","timeline/components/TickMark.tsx","waveform/waveform.js","timeline/components/TimelineAudioItem.tsx","timeline/timeline.tsx","toolbar/Toolbar.tsx","models/config.tsx","VideoPlayer/VideoPlayer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DropZone","props","onDrop","useCallback","useDropzone","getRootProps","getInputProps","isDragActive","style","display","backgroundColor","width","justifyContent","paddingTop","paddingBottom","marginBottom","dropText","dragText","TickMark","seconds","index","hours","Math","floor","minutes","timestamp","console","log","key","height","borderLeftColor","borderLeftWidth","borderLeftStyle","flexDirection","color","zIndex","marginTop","marginLeft","userSelect","fontSize","Waveform","state","this","$el","ReactDOM","findDOMNode","$waveform","querySelector","wavesurfer","WaveSurfer","create","container","waveColor","progressColor","responsive","interact","load","src","className","React","Component","defaultProps","TimelineAudioItem","useState","duration","setDuration","audio","useRef","useEffect","document","body","addEventListener","e","ctrlKey","preventDefault","deltaY","passive","axis","disabled","isTemplate","onStop","position","onChangeOffset","x","node","clientWidth","window","URL","createObjectURL","file","ref","onLoadedMetadata","current","onReceivedMetaData","Timeline","longestDuration","setLongestDuration","timeline","setTimeline","getOffset","offset","arr","Array","fill","length","overflowX","overflowY","onWheel","containerScrollPosition","scrollLeft","scrollTo","top","left","map","val","videoFile","audioFile","Toolbar","isPlaying","xmlns","viewBox","onClick","togglePlay","data-name","opacity","d","Config","VideoPlayer","FileReader","setOffset","setIsPlaying","videoRef","audioRef","TimingObject","onpause","pause","play","currentTime","type","bottom","margin","padding","href","encodeURIComponent","JSON","stringify","download","App","videoDropText","setVideoDropText","audioDropText","setAudioDropText","setVideoFile","templateAudioFile","setTemplateAudioFile","right","alignItems","acceptedFiles","forEach","name","startsWith","Boolean","location","hostname","match","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.809326c0.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\n/**\n * @param {string} dropText is the text that shows up once a file is dragged onto the file\n * @param {string} dragText the text that shows before the user actually drags a file on top of this component\n * @param {(acceptedFiles: any) => void} onDrop callback for the selecting of a file either by dragging a file on top or clicking and selecting a file\n * */\ninterface Props {\n  dropText: string;\n  dragText: string;\n  onDrop: (acceptedFiles: any) => void;\n}\n\nconst DropZone: React.FunctionComponent<Props> = (props: Props) => {\n  const onDrop = useCallback(props.onDrop, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n  return (\n    <div\n      {...getRootProps()}\n      style={{\n        display: \"flex\",\n        backgroundColor: \"grey\",\n        width: \"70%\",\n        justifyContent: \"center\",\n        paddingTop: \"10vh\",\n        paddingBottom: \"10vh\",\n        marginBottom: \"5vh\",\n      }}\n    >\n      <input {...getInputProps()} />\n      {isDragActive ? <p>{props.dropText}</p> : <p>{props.dragText}</p>}\n    </div>\n  );\n};\n\nexport default DropZone;\n","import React from \"react\";\n\ninterface props {\n  index: number;\n}\n\nconst TickMark: React.FunctionComponent<props> = (props) => {\n  let seconds = props.index;\n  const hours = Math.floor(seconds / (60 * 60));\n  seconds -= hours * 60 * 60;\n  const minutes = Math.floor(seconds / 60);\n  seconds -= minutes * 60;\n  const timestamp = `${hours < 10 ? \"0\" + hours : hours}:${\n    minutes < 10 ? \"0\" + minutes : minutes\n  }:${seconds < 10 ? \"0\" + seconds : seconds}`;\n  console.log(timestamp);\n\n  return (\n    <div\n      key={props.index}\n      style={{\n        width: \"4vw\",\n        height: \"25%\",\n        backgroundColor: \"transparent\",\n        borderLeftColor: \"white\",\n        borderLeftWidth: \"2px\",\n        borderLeftStyle: \"solid\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {props.index != 0 ? (\n        <p\n          style={{\n            color: \"white\",\n            height: \"100%\",\n            zIndex: 200,\n            marginTop: \"1.5vh\",\n            marginLeft: \"-4vw\",\n            userSelect: \"none\",\n            fontSize: \"0.7em\",\n          }}\n        >\n          {timestamp}\n        </p>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default TickMark;\n","// components/waveform.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\n\nexport default class Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.$el = ReactDOM.findDOMNode(this);\n    this.$waveform = this.$el.querySelector(\".wave\");\n    this.wavesurfer = WaveSurfer.create({\n      container: this.$waveform,\n      waveColor: \"violet\",\n      progressColor: \"violet\",\n      responsive: true,\n      interact: false,\n    });\n    this.wavesurfer.load(this.props.src);\n  }\n  componentWillUnmount() {}\n  render() {\n    return (\n      <div className=\"waveform\">\n        <div className=\"wave\"></div>\n      </div>\n    );\n  }\n}\n\nWaveform.defaultProps = {\n  src: \"\",\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport Waveform from \"../../waveform/waveform\";\n\ninterface props {\n  file: any;\n  isTemplate: boolean;\n  onReceivedMetaData: (duration: number) => void;\n  onChangeOffset: (offset: number) => void;\n}\n\nconst TimelineAudioItem: React.FunctionComponent<props> = (props) => {\n  const [duration, setDuration] = useState(0);\n  const audio = useRef<HTMLAudioElement | null>(null);\n  const [scale, setScale] = useState(1);\n  useEffect(() => {\n    document.body.addEventListener(\n      \"wheel\",\n      (e) => {\n        if (e.ctrlKey) {\n          e.preventDefault();\n          console.log(e.deltaY);\n        }\n      },\n      { passive: false }\n    );\n  }, []);\n\n  return (\n    <Draggable\n      axis=\"x\"\n      disabled={props.isTemplate}\n      onStop={(e, position) => {\n        props.onChangeOffset(\n          (position.x / position.node.clientWidth) * duration\n        );\n      }}\n    >\n      <div\n        style={{\n          width: duration * 4 + \"vw\",\n          backgroundColor: \"#00647a\",\n          marginBottom: \"2.5vh\",\n        }}\n      >\n        <div\n          className=\"parent-component\"\n          style={{ width: \"100%\", height: \"100%\" }}\n        >\n          <Waveform src={window.URL.createObjectURL(props.file)} />\n          <audio\n            src={window.URL.createObjectURL(props.file)}\n            ref={audio}\n            onLoadedMetadata={(e) => {\n              if (audio.current) {\n                setDuration(audio.current.duration);\n                props.onReceivedMetaData(audio.current.duration);\n              }\n            }}\n          ></audio>\n        </div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default TimelineAudioItem;\n","import { off } from \"process\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Toolbar from \"../toolbar/Toolbar\";\nimport Waveform from \"../waveform/waveform\";\nimport TickMark from \"./components/TickMark\";\nimport TimelineAudioItem from \"./components/TimelineAudioItem\";\n\ninterface Props {\n  videoFile: any;\n  audioFile: any;\n  onChangeOffset: (offset: number) => void;\n  offset: number;\n}\n\nconst Timeline: React.FunctionComponent<Props> = (props) => {\n  const container = useRef<HTMLDivElement | null>(null);\n  const [longestDuration, setLongestDuration] = useState(0);\n  const [timeline, setTimeline] = useState<any[]>([]);\n\n  const getOffset = () => {\n    if (props.offset > 0) {\n      return props.offset;\n    } else {\n      return 0;\n    }\n  };\n\n  useEffect(() => {\n    let arr = new Array(Math.floor(longestDuration + getOffset())).fill(null);\n    setTimeline(arr);\n    console.log(\"Use effect \" + arr.length);\n  }, [longestDuration, props.offset]);\n\n  return (\n    <div\n      style={{\n        height: \"40vh\",\n        width: \"100vw\",\n        overflowX: \"scroll\",\n        overflowY: \"hidden\",\n      }}\n      ref={container}\n      onWheel={(e) => {\n        e.preventDefault();\n        if (container.current && !e.ctrlKey) {\n          var containerScrollPosition = container.current.scrollLeft;\n          container.current.scrollTo({\n            top: 0,\n            left: containerScrollPosition + e.deltaY,\n            // behaviour: 'smooth' //if you want smooth scrolling\n          });\n        }\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"black\",\n          height: \"3vh\",\n          width: (longestDuration + getOffset()) * 4 + \"vw\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        {timeline.map((val: null, index: number) => {\n          return <TickMark key={index} index={index}></TickMark>;\n        })}\n      </div>\n      <TimelineAudioItem\n        file={props.videoFile}\n        isTemplate={false}\n        onReceivedMetaData={(duration) => {\n          if (duration > longestDuration) {\n            setLongestDuration(duration);\n          }\n        }}\n        onChangeOffset={(offset) => {\n          props.onChangeOffset(offset);\n        }}\n      ></TimelineAudioItem>\n      <TimelineAudioItem\n        file={props.audioFile}\n        isTemplate={true}\n        onReceivedMetaData={(duration) => {\n          if (duration > longestDuration) {\n            setLongestDuration(duration);\n          }\n        }}\n        onChangeOffset={(offset) => {}}\n      ></TimelineAudioItem>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import React from \"react\";\n\ninterface Props {\n  isPlaying: boolean;\n  togglePlay: () => void;\n}\n\nconst Toolbar: React.FunctionComponent<Props> = (props) => {\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n      }}\n    >\n      {props.isPlaying ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"100%\"\n          onClick={(e) => props.togglePlay()}\n        >\n          <g data-name=\"Layer 2\">\n            <g data-name=\"pause-circle\">\n              <rect width=\"24\" height=\"24\" opacity=\"0\" />\n              <path d=\"M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z\" />\n              <path d=\"M15 8a1 1 0 0 0-1 1v6a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z\" />\n              <path d=\"M9 8a1 1 0 0 0-1 1v6a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z\" />\n            </g>\n          </g>\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"100%\"\n          onClick={(e) => props.togglePlay()}\n        >\n          <g data-name=\"Layer 2\">\n            <g data-name=\"play-circle\">\n              <rect width=\"24\" height=\"24\" opacity=\"0\" />\n              <path d=\"M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8 8 0 0 1-8 8z\" />\n              <path d=\"M12.34 7.45a1.7 1.7 0 0 0-1.85-.3 1.6 1.6 0 0 0-1 1.48v6.74a1.6 1.6 0 0 0 1 1.48 1.68 1.68 0 0 0 .69.15 1.74 1.74 0 0 0 1.16-.45L16 13.18a1.6 1.6 0 0 0 0-2.36zm-.84 7.15V9.4l2.81 2.6z\" />\n            </g>\n          </g>\n        </svg>\n      )}\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import { off } from \"process\";\n\nexport default class Config {\n  offset: number;\n\n  constructor(offset: number) {\n    this.offset = offset;\n  }\n}\n","import { off } from \"process\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Timeline from \"../timeline/timeline\";\nimport Toolbar from \"../toolbar/Toolbar\";\nimport Waveform from \"../waveform/waveform\";\nimport { TimingObject } from \"timing-object\";\nimport { setTimingsrc } from \"timingsrc\";\nimport Config from \"../models/config\";\n\ninterface Props {\n  videoFile: any;\n  audioFile: any;\n}\n\nconst VideoPlayer: React.FunctionComponent<Props> = (props: Props) => {\n  const fileReader: FileReader = new FileReader();\n  const [postion, setPostion] = useState(0);\n  const [offset, setOffset] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const timingObject = new TimingObject();\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.onpause = (e) => {\n        setIsPlaying(false);\n\n        if (videoRef.current) videoRef.current.pause();\n      };\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current?.play();\n      if (videoRef.current && audioRef.current) {\n        videoRef.current.currentTime = audioRef.current.currentTime - offset;\n        videoRef.current.play();\n      }\n    } else {\n      audioRef.current?.pause();\n    }\n  }, [isPlaying]);\n\n  const getJson = () =>\n    \"data:text/json;charset=utf-8,\" +\n    encodeURIComponent(JSON.stringify(new Config(offset)));\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: \"#36393E\",\n        height: \"100vh\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          height: \"50vh\",\n          width: \"100vw\",\n        }}\n      >\n        <video style={{ width: \"100%\", height: \"100%\" }} ref={videoRef}>\n          <source\n            src={window.URL.createObjectURL(props.videoFile)}\n            type=\"video/mp4\"\n          ></source>\n        </video>\n        <audio ref={audioRef}>\n          <source src={window.URL.createObjectURL(props.audioFile)}></source>\n        </audio>\n        <div\n          style={{\n            // width: \"20vw\",\n            height: \"10vh\",\n            fontSize: \"2em\",\n            color: \"black\",\n            position: \"absolute\",\n            bottom: \"10vh\",\n            margin: \"auto\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <a\n            style={{\n              backgroundColor: \"green\",\n              padding: \"20px\",\n              display: \"inline-block\",\n              userSelect: \"none\",\n              color: \"black\",\n            }}\n            href={getJson()}\n            download=\"config.json\"\n          >\n            Export\n          </a>\n        </div>\n      </div>\n      <div\n        style={{\n          height: \"5vh\",\n          width: \"100vw\",\n          backgroundColor: \"#36393E\",\n          zIndex: 400,\n        }}\n      >\n        <Toolbar\n          isPlaying={isPlaying}\n          togglePlay={() => setIsPlaying(!isPlaying)}\n        ></Toolbar>\n      </div>\n      <div\n        style={{\n          height: \"30vh\",\n          width: \"100vw\",\n          backgroundColor: \"#36393E\",\n        }}\n      >\n        <Timeline\n          onChangeOffset={(offset) => {\n            setIsPlaying(false);\n            setOffset(offset);\n          }}\n          videoFile={props.videoFile}\n          audioFile={props.audioFile}\n          offset={offset}\n        ></Timeline>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useDropzone } from \"react-dropzone\";\nimport DropZone from \"./dropzone/DropZone\";\nimport VideoPlayer from \"./VideoPlayer/VideoPlayer\";\n\nconst App = () => {\n  const [videoDropText, setVideoDropText] = useState(\n    \"Drag n drop your video here or click to select a file\"\n  );\n  const [audioDropText, setAudioDropText] = useState(\n    \"Drag n drop the template mp3 here or click to select\"\n  );\n  const [videoFile, setVideoFile] = useState();\n  const [templateAudioFile, setTemplateAudioFile] = useState();\n\n  const getDropMenu = () => (\n    <div\n      style={{\n        position: \"fixed\",\n        bottom: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#36393E\",\n      }}\n    >\n      <DropZone\n        onDrop={(acceptedFiles: any) => {\n          acceptedFiles.forEach((file: any) => {\n            if (file.type == \"video/mp4\") {\n              setVideoDropText(file.name);\n              setVideoFile(file);\n            } else {\n              setVideoDropText(\"Not the correct type. Please drop an mp4 file\");\n            }\n          });\n        }}\n        dropText=\"Drop\"\n        dragText={videoDropText}\n      ></DropZone>\n      <DropZone\n        onDrop={(acceptedFiles: any) => {\n          acceptedFiles.forEach((file: any) => {\n            if (file.type.startsWith(\"audio\")) {\n              setAudioDropText(file.name);\n              setTemplateAudioFile(file);\n            } else {\n              setAudioDropText(\"Not the correct type. Please drop an mp4 file\");\n            }\n          });\n        }}\n        dropText=\"Drop\"\n        dragText={audioDropText}\n      ></DropZone>\n    </div>\n  );\n\n  const getPage = () => {\n    if (videoFile && templateAudioFile) {\n      return (\n        <VideoPlayer\n          videoFile={videoFile}\n          audioFile={templateAudioFile}\n        ></VideoPlayer>\n      );\n    } else {\n      return getDropMenu();\n    }\n  };\n\n  return <div className=\"App\">{getPage()}</div>;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}